"use strict";(self.webpackChunkroky_wang=self.webpackChunkroky_wang||[]).push([[901],{9136:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=a(4848),t=a(8453);const i={title:"Apache APISIX\u7f51\u5173"},s=void 0,o={id:"MiddleWare/apigateway/apisix",title:"Apache APISIX\u7f51\u5173",description:"Apache APISIX \u662f\u4e00\u4e2a\u52a8\u6001\u3001\u5b9e\u65f6\u3001\u9ad8\u6027\u80fd\u7684 API \u7f51\u5173\uff0c\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u3001\u52a8\u6001\u4e0a\u884c\u3001\u91d1\u4e1d\u96c0\u53d1\u5e03\u3001\u7194\u65ad\u3001\u8ba4\u8bc1\u3001\u53ef\u89c2\u5bdf\u6027\u7b49\u4e30\u5bcc\u7684\u6d41\u91cf\u7ba1\u7406\u529f\u80fd\u3002",source:"@site/docs/MiddleWare/apigateway/apisix.md",sourceDirName:"MiddleWare/apigateway",slug:"/MiddleWare/apigateway/apisix",permalink:"/en/docs/MiddleWare/apigateway/apisix",draft:!1,unlisted:!1,editUrl:"https://github.com/wxytjustb/rokywang/tree/main/docs/MiddleWare/apigateway/apisix.md",tags:[],version:"current",frontMatter:{title:"Apache APISIX\u7f51\u5173"},sidebar:"tutorialSidebar",previous:{title:"MiddleWare",permalink:"/en/docs/category/middleware"},next:{title:"Caddy Server",permalink:"/en/docs/MiddleWare/caddy"}},c={},l=[{value:"\u5feb\u901f\u5f00\u59cb",id:"\u5feb\u901f\u5f00\u59cb",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Apache APISIX \u662f\u4e00\u4e2a\u52a8\u6001\u3001\u5b9e\u65f6\u3001\u9ad8\u6027\u80fd\u7684 API \u7f51\u5173\uff0c\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u3001\u52a8\u6001\u4e0a\u884c\u3001\u91d1\u4e1d\u96c0\u53d1\u5e03\u3001\u7194\u65ad\u3001\u8ba4\u8bc1\u3001\u53ef\u89c2\u5bdf\u6027\u7b49\u4e30\u5bcc\u7684\u6d41\u91cf\u7ba1\u7406\u529f\u80fd\u3002"}),"\n",(0,r.jsx)(n.h2,{id:"\u5feb\u901f\u5f00\u59cb",children:"\u5feb\u901f\u5f00\u59cb"}),"\n",(0,r.jsx)(n.p,{children:"\u672c\u6587\u4f7f\u7528apisix-3.7.0-debian"}),"\n",(0,r.jsx)(n.p,{children:"\u90e8\u7f72apisix"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"git clone https://github.com/apache/apisix-docker.git\ncd apisix-docker/example\ndocker-compose -p docker-apisix up -d\n"})}),"\n",(0,r.jsx)(n.p,{children:"docker-compose.yml\u6587\u4ef6\uff0c\u5305\u542bdashboard"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'version: "3"\n\nservices:\n  apisix:\n    image: apache/apisix:${APISIX_IMAGE_TAG:-3.7.0-debian}\n    restart: always\n    volumes:\n      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro\n    depends_on:\n      - etcd\n    ports:\n      - "9180:9180/tcp" # data api \u7aef\u53e3\n      - "80:9080/tcp"   # http service \u7aef\u53e3\n      - "9091:9091/tcp" # prometheus\u670d\u52a1\u7aef\u53e3\n      - "443:9443/tcp"  # https service\u7aef\u53e3\n      - "9092:9092/tcp" # control api \u7aef\u53e3\n    networks:\n      apisix:\n\n  etcd:\n    image: bitnami/etcd:3.5.11\n    restart: always\n    volumes:\n      - etcd_data:/bitnami/etcd\n    environment:\n      ETCD_ENABLE_V2: "true"\n      ALLOW_NONE_AUTHENTICATION: "yes"\n      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"\n      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"\n    networks:\n      apisix:\n\n  prometheus:\n    image: prom/prometheus:v2.25.0\n    restart: always\n    volumes:\n      - ./prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml\n    ports:\n      - "9090:9090"\n    networks:\n      apisix:\n\n  grafana:\n    image: grafana/grafana:7.3.7\n    restart: always\n    ports:\n      - "3000:3000"\n    volumes:\n      - "./grafana_conf/provisioning:/etc/grafana/provisioning"\n      - "./grafana_conf/dashboards:/var/lib/grafana/dashboards"\n      - "./grafana_conf/config/grafana.ini:/etc/grafana/grafana.ini"\n    networks:\n      apisix:\n\n  apisix-dashboard:\n    image: apache/apisix-dashboard\n    ports:\n       - 19000:9000\n    volumes:\n       - ./dashboard_config.yaml:/usr/local/apisix-dashboard/conf/conf.yaml\n    networks:\n      apisix:\n\n\nnetworks:\n  apisix:\n    driver: bridge\n\nvolumes:\n  etcd_data:\n    driver: local\n'})}),"\n",(0,r.jsx)(n.p,{children:"apisix.yaml\u6587\u4ef6"}),"\n",(0,r.jsxs)(n.p,{children:["\u9ed8\u8ba4\u914d\u7f6e ",(0,r.jsx)(n.a,{href:"https://github.com/apache/apisix/blob/master/conf/config-default.yaml",children:"https://github.com/apache/apisix/blob/master/conf/config-default.yaml"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'apisix:\n  node_listen: 9080              # APISIX listening port\n  enable_ipv6: false\n\n  enable_control: true\n  control:\n    ip: "0.0.0.0"\n    port: 9092\n\ndeployment:\n  admin:\n    allow_admin:               # https://nginx.org/en/docs/http/ngx_http_access_module.html#allow\n      - 0.0.0.0/0              # We need to restrict ip access rules for security. 0.0.0.0/0 is for test.\n\n    admin_key:\n      - name: "admin"\n        key: edd1c9f034335f136f87ad84b625c8f1\n        role: admin                 # admin: manage all configuration data\n\n      - name: "viewer"\n        key: 4054f7cf07e344346cd3f287985e76a2\n        role: viewer\n\n  etcd:\n    host:                           # it\'s possible to define multiple etcd hosts addresses of the same etcd cluster.\n      - "http://etcd:2379"          # multiple etcd address\n    prefix: "/apisix"               # apisix configurations prefix\n    timeout: 30                     # 30 seconds\n\nplugin_attr:\n  prometheus:\n    export_addr:\n      ip: "0.0.0.0"\n      port: 9091\n'})}),"\n",(0,r.jsx)(n.p,{children:"dashboard_config.yaml"}),"\n",(0,r.jsxs)(n.p,{children:["\u9ed8\u8ba4\u914d\u7f6e",(0,r.jsx)(n.a,{href:"https://github.com/apache/apisix-dashboard/blob/master/api/conf/conf.yaml",children:"https://github.com/apache/apisix-dashboard/blob/master/api/conf/conf.yaml"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'conf:\n  listen:\n    # host: 127.0.0.1     # the address on which the `Manager API` should listen.\n                          # The default value is 0.0.0.0, if want to specify, please enable it.\n                          # This value accepts IPv4, IPv6, and hostname.\n    port: 9000            # The port on which the `Manager API` should listen.\n\n  # ssl:\n  #   host: 127.0.0.1     # the address on which the `Manager API` should listen for HTTPS.\n                          # The default value is 0.0.0.0, if want to specify, please enable it.\n  #   port: 9001            # The port on which the `Manager API` should listen for HTTPS.\n  #   cert: "/tmp/cert/example.crt" # Path of your SSL cert.\n  #   key:  "/tmp/cert/example.key"  # Path of your SSL key.\n\n  # allow_list:             # If we don\'t set any IP list, then any IP access is allowed by default.\n  #  - 0.0.0.0           # The rules are checked in sequence until the first match is found.\n  #  - ::1                 # In this example, access is allowed only for IPv4 network 127.0.0.1, and for IPv6 network ::1.\n                          # It also support CIDR like 192.168.1.0/24 and 2001:0db8::/32\n  etcd:\n    endpoints:            # supports defining multiple etcd host addresses for an etcd cluster\n      - etcd:2379\n                          # yamllint disable rule:comments-indentation\n                          # etcd basic auth info\n    # username: "root"    # ignore etcd username if not enable etcd auth\n    # password: "123456"  # ignore etcd password if not enable etcd auth\n    mtls:\n      key_file: ""          # Path of your self-signed client side key\n      cert_file: ""         # Path of your self-signed client side cert\n      ca_file: ""           # Path of your self-signed ca cert, the CA is used to sign callers\' certificates\n    # prefix: /apisix       # apisix config\'s prefix in etcd, /apisix by default\n  security:\n     content_security_policy: "frame-src *;"\n     \nauthentication:\n  secret:\n    secret              # secret for jwt token generation.\n                        # NOTE: Highly recommended to modify this value to protect `manager api`.\n                        # if it\'s default value, when `manager api` start, it will generate a random string to replace it.\n  expire_time: 3600     # jwt token expire time, in second\n  users:                # yamllint enable rule:comments-indentation\n    - username: admin   # username and password for login `manager api`\n      password: admin\n    - username: user\n      password: user\n     \nplugins:\n  - api-breaker\n  - authz-casbin\n  - authz-casdoor\n  - authz-keycloak\n  - aws-lambda\n  - azure-functions\n  - basic-auth\n  # - batch-requests\n  - clickhouse-logger\n  - client-control\n  - consumer-restriction\n  - cors\n  - csrf\n  - datadog\n  # - dubbo-proxy\n  - echo\n  - error-log-logger\n  # - example-plugin\n  - ext-plugin-post-req\n  - ext-plugin-post-resp\n  - ext-plugin-pre-req\n  - fault-injection\n  - file-logger\n  - forward-auth\n  - google-cloud-logging\n  - grpc-transcode\n  - grpc-web\n  - gzip\n  - hmac-auth\n  - http-logger\n  - ip-restriction\n  - jwt-auth\n  - kafka-logger\n  - kafka-proxy\n  - key-auth\n  - ldap-auth\n  - limit-conn\n  - limit-count\n  - limit-req\n  - loggly\n  # - log-rotate\n  - mocking\n  # - node-status\n  - opa\n  - openid-connect\n  - opentelemetry\n  - openwhisk\n  - prometheus\n  - proxy-cache\n  - proxy-control\n  - proxy-mirror\n  - proxy-rewrite\n  - public-api\n  - real-ip\n  - redirect\n  - referer-restriction\n  - request-id\n  - request-validation\n  - response-rewrite\n  - rocketmq-logger\n  - server-info \n  - serverless-post-function\n  - serverless-pre-function\n  - skywalking\n  - skywalking-logger\n  - sls-logger\n  - splunk-hec-logging\n  - syslog\n  - tcp-logger\n  - traffic-split\n  - ua-restriction\n  - udp-logger\n  - uri-blocker\n  - wolf-rbac\n  - zipkin\n  - elasticsearch-logge\n  - openfunction\n  - tencent-cloud-cls\n  - ai\n  - cas-auth\n'})}),"\n",(0,r.jsx)(n.p,{children:"Service\u4e0eUpstream\u7684\u533a\u522b"}),"\n",(0,r.jsx)(n.p,{children:"Service = Upstream + Plugin"}),"\n",(0,r.jsx)(n.p,{children:"\u63d2\u4ef6\u4f18\u5148\u7ea7"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Consumer > Consumer Group > Route > Plugin Config > Service\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5982\u4f55\u5b9e\u73b0\u7c7b\u4f3cnginx\u4ee3\u7406\u7684\u6548\u679c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"proxy_set_header X-Forwarded-Host $host;\nproxy_set_header X-Forwarded-Server $host;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header X-Forwarded-Proto $scheme; \n"})}),"\n",(0,r.jsx)(n.p,{children:"\u4f7f\u7528proxy-rewirte\u63d2\u4ef6"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "uri": "/your_path",\n    "plugins": {\n        "proxy-rewrite": {\n            "headers": {\n                "X-Forwarded-Host": "$host",\n                "X-Forwarded-Server": "$host",\n                "X-Forwarded-For": "$remote_addr",\n                "X-Forwarded-Proto": "$scheme"\n            }\n        }\n    },\n    "upstream": {\n        "type": "roundrobin",\n        "nodes": {\n            "your_upstream_server:port": 1\n        }\n    }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var r=a(6540);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);