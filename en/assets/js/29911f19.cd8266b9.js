"use strict";(self.webpackChunkroky_wang=self.webpackChunkroky_wang||[]).push([[901],{9136:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>l});var a=s(4848),i=s(8453);const t={title:"Apache APISIX\u7f51\u5173"},r=void 0,o={id:"MiddleWare/apigateway/apisix",title:"Apache APISIX\u7f51\u5173",description:"Apache APISIX \u662f\u4e00\u4e2a\u52a8\u6001\u3001\u5b9e\u65f6\u3001\u9ad8\u6027\u80fd\u7684 API \u7f51\u5173\uff0c\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u3001\u52a8\u6001\u4e0a\u884c\u3001\u91d1\u4e1d\u96c0\u53d1\u5e03\u3001\u7194\u65ad\u3001\u8ba4\u8bc1\u3001\u53ef\u89c2\u5bdf\u6027\u7b49\u4e30\u5bcc\u7684\u6d41\u91cf\u7ba1\u7406\u529f\u80fd\u3002",source:"@site/docs/MiddleWare/apigateway/apisix.md",sourceDirName:"MiddleWare/apigateway",slug:"/MiddleWare/apigateway/apisix",permalink:"/en/docs/MiddleWare/apigateway/apisix",draft:!1,unlisted:!1,editUrl:"https://github.com/wxytjustb/rokywang/tree/main/docs/MiddleWare/apigateway/apisix.md",tags:[],version:"current",frontMatter:{title:"Apache APISIX\u7f51\u5173"},sidebar:"tutorialSidebar",previous:{title:"MiddleWare",permalink:"/en/docs/category/middleware"},next:{title:"Caddy Server",permalink:"/en/docs/MiddleWare/caddy"}},c={},l=[{value:"\u5feb\u901f\u5f00\u59cb",id:"\u5feb\u901f\u5f00\u59cb",level:2},{value:"\u81ea\u5b9a\u4e49nginx\u914d\u7f6e",id:"\u81ea\u5b9a\u4e49nginx\u914d\u7f6e",level:2},{value:"\u63d2\u4ef6",id:"\u63d2\u4ef6",level:2},{value:"proxy-rewirte",id:"proxy-rewirte",level:3},{value:"authz-casdoor",id:"authz-casdoor",level:3},{value:"ua-restriction",id:"ua-restriction",level:3},{value:"http-logger",id:"http-logger",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Apache APISIX \u662f\u4e00\u4e2a\u52a8\u6001\u3001\u5b9e\u65f6\u3001\u9ad8\u6027\u80fd\u7684 API \u7f51\u5173\uff0c\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u3001\u52a8\u6001\u4e0a\u884c\u3001\u91d1\u4e1d\u96c0\u53d1\u5e03\u3001\u7194\u65ad\u3001\u8ba4\u8bc1\u3001\u53ef\u89c2\u5bdf\u6027\u7b49\u4e30\u5bcc\u7684\u6d41\u91cf\u7ba1\u7406\u529f\u80fd\u3002"}),"\n",(0,a.jsx)(n.h2,{id:"\u5feb\u901f\u5f00\u59cb",children:"\u5feb\u901f\u5f00\u59cb"}),"\n",(0,a.jsx)(n.p,{children:"\u672c\u6587\u4f7f\u7528apisix-3.6.0-debian"}),"\n",(0,a.jsx)(n.p,{children:"\u90e8\u7f72apisix"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"git clone -b v3.6.0 https://github.com/apache/apisix-docker.git\ncd apisix-docker/example\ndocker-compose -p docker-apisix up -d\n"})}),"\n",(0,a.jsx)(n.p,{children:"docker-compose.yml\u6587\u4ef6\uff0c\u5305\u542bdashboard"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'version: "3"\n\nservices:\n  apisix:\n    image: apache/apisix:${APISIX_IMAGE_TAG:-3.6.0-debian}\n    restart: always\n    volumes:\n      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro\n    depends_on:\n      - etcd\n    ports:\n      - "9180:9180/tcp" # data api \u7aef\u53e3\n      - "80:9080/tcp"   # http service \u7aef\u53e3\n      - "9091:9091/tcp" # prometheus\u670d\u52a1\u7aef\u53e3\n      - "443:9443/tcp"  # https service\u7aef\u53e3\n      - "9092:9092/tcp" # control api \u7aef\u53e3\n    networks:\n      apisix:\n\n  etcd:\n    image: bitnami/etcd:3.5.11\n    restart: always\n    volumes:\n      - etcd_data:/bitnami/etcd\n    environment:\n      ETCD_ENABLE_V2: "true"\n      ALLOW_NONE_AUTHENTICATION: "yes"\n      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"\n      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"\n    networks:\n      apisix:\n\n  prometheus:\n    image: prom/prometheus:v2.25.0\n    restart: always\n    volumes:\n      - ./prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml\n    ports:\n      - "9090:9090"\n    networks:\n      apisix:\n\n  grafana:\n    image: grafana/grafana:7.3.7\n    restart: always\n    ports:\n      - "3000:3000"\n    volumes:\n      - "./grafana_conf/provisioning:/etc/grafana/provisioning"\n      - "./grafana_conf/dashboards:/var/lib/grafana/dashboards"\n      - "./grafana_conf/config/grafana.ini:/etc/grafana/grafana.ini"\n    networks:\n      apisix:\n\n  apisix-dashboard:\n    image: apache/apisix-dashboard\n    ports:\n       - 19000:9000\n    volumes:\n       - ./dashboard_config.yaml:/usr/local/apisix-dashboard/conf/conf.yaml\n    networks:\n      apisix:\n\n\nnetworks:\n  apisix:\n    driver: bridge\n\nvolumes:\n  etcd_data:\n    driver: local\n'})}),"\n",(0,a.jsx)(n.p,{children:"apisix.yaml\u6587\u4ef6"}),"\n",(0,a.jsxs)(n.p,{children:["\u9ed8\u8ba4\u914d\u7f6e ",(0,a.jsx)(n.a,{href:"https://github.com/apache/apisix/blob/master/conf/config-default.yaml",children:"https://github.com/apache/apisix/blob/master/conf/config-default.yaml"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'apisix:\n  node_listen: 9080              # APISIX listening port\n  enable_ipv6: false\n\n  enable_control: true\n  control:\n    ip: "0.0.0.0"\n    port: 9092\n\ndeployment:\n  admin:\n    allow_admin:               # https://nginx.org/en/docs/http/ngx_http_access_module.html#allow\n      - 0.0.0.0/0              # We need to restrict ip access rules for security. 0.0.0.0/0 is for test.\n\n    admin_key:\n      - name: "admin"\n        key: edd1c9f034335f136f87ad84b625c8f1\n        role: admin                 # admin: manage all configuration data\n\n      - name: "viewer"\n        key: 4054f7cf07e344346cd3f287985e76a2\n        role: viewer\n\n  etcd:\n    host:                           # it\'s possible to define multiple etcd hosts addresses of the same etcd cluster.\n      - "http://etcd:2379"          # multiple etcd address\n    prefix: "/apisix"               # apisix configurations prefix\n    timeout: 30                     # 30 seconds\n\nplugin_attr:\n  prometheus:\n    export_addr:\n      ip: "0.0.0.0"\n      port: 9091\n'})}),"\n",(0,a.jsx)(n.p,{children:"dashboard_config.yaml"}),"\n",(0,a.jsxs)(n.p,{children:["\u9ed8\u8ba4\u914d\u7f6e",(0,a.jsx)(n.a,{href:"https://github.com/apache/apisix-dashboard/blob/master/api/conf/conf.yaml",children:"https://github.com/apache/apisix-dashboard/blob/master/api/conf/conf.yaml"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'conf:\n  listen:\n    # host: 127.0.0.1     # the address on which the `Manager API` should listen.\n                          # The default value is 0.0.0.0, if want to specify, please enable it.\n                          # This value accepts IPv4, IPv6, and hostname.\n    port: 9000            # The port on which the `Manager API` should listen.\n\n  # ssl:\n  #   host: 127.0.0.1     # the address on which the `Manager API` should listen for HTTPS.\n                          # The default value is 0.0.0.0, if want to specify, please enable it.\n  #   port: 9001            # The port on which the `Manager API` should listen for HTTPS.\n  #   cert: "/tmp/cert/example.crt" # Path of your SSL cert.\n  #   key:  "/tmp/cert/example.key"  # Path of your SSL key.\n\n  # allow_list:             # If we don\'t set any IP list, then any IP access is allowed by default.\n  #  - 0.0.0.0           # The rules are checked in sequence until the first match is found.\n  #  - ::1                 # In this example, access is allowed only for IPv4 network 127.0.0.1, and for IPv6 network ::1.\n                          # It also support CIDR like 192.168.1.0/24 and 2001:0db8::/32\n  etcd:\n    endpoints:            # supports defining multiple etcd host addresses for an etcd cluster\n      - etcd:2379\n                          # yamllint disable rule:comments-indentation\n                          # etcd basic auth info\n    # username: "root"    # ignore etcd username if not enable etcd auth\n    # password: "123456"  # ignore etcd password if not enable etcd auth\n    mtls:\n      key_file: ""          # Path of your self-signed client side key\n      cert_file: ""         # Path of your self-signed client side cert\n      ca_file: ""           # Path of your self-signed ca cert, the CA is used to sign callers\' certificates\n    # prefix: /apisix       # apisix config\'s prefix in etcd, /apisix by default\n  security:\n     content_security_policy: "frame-src *;"\n     \nauthentication:\n  secret:\n    secret              # secret for jwt token generation.\n                        # NOTE: Highly recommended to modify this value to protect `manager api`.\n                        # if it\'s default value, when `manager api` start, it will generate a random string to replace it.\n  expire_time: 3600     # jwt token expire time, in second\n  users:                # yamllint enable rule:comments-indentation\n    - username: admin   # username and password for login `manager api`\n      password: admin\n    - username: user\n      password: user\n     \nplugins:\n  - api-breaker\n  - authz-casbin\n  - authz-casdoor\n  - authz-keycloak\n  - aws-lambda\n  - azure-functions\n  - basic-auth\n  # - batch-requests\n  - clickhouse-logger\n  - client-control\n  - consumer-restriction\n  - cors\n  - csrf\n  - datadog\n  # - dubbo-proxy\n  - echo\n  - error-log-logger\n  # - example-plugin\n  - ext-plugin-post-req\n  - ext-plugin-post-resp\n  - ext-plugin-pre-req\n  - fault-injection\n  - file-logger\n  - forward-auth\n  - google-cloud-logging\n  - grpc-transcode\n  - grpc-web\n  - gzip\n  - hmac-auth\n  - http-logger\n  - ip-restriction\n  - jwt-auth\n  - kafka-logger\n  - kafka-proxy\n  - key-auth\n  - ldap-auth\n  - limit-conn\n  - limit-count\n  - limit-req\n  - loggly\n  # - log-rotate\n  - mocking\n  # - node-status\n  - opa\n  - openid-connect\n  - opentelemetry\n  - openwhisk\n  - prometheus\n  - proxy-cache\n  - proxy-control\n  - proxy-mirror\n  - proxy-rewrite\n  - public-api\n  - real-ip\n  - redirect\n  - referer-restriction\n  - request-id\n  - request-validation\n  - response-rewrite\n  - rocketmq-logger\n  - server-info \n  - serverless-post-function\n  - serverless-pre-function\n  - skywalking\n  - skywalking-logger\n  - sls-logger\n  - splunk-hec-logging\n  - syslog\n  - tcp-logger\n  - traffic-split\n  - ua-restriction\n  - udp-logger\n  - uri-blocker\n  - wolf-rbac\n  - zipkin\n  - elasticsearch-logge\n  - openfunction\n  - tencent-cloud-cls\n  - ai\n  - cas-auth\n'})}),"\n",(0,a.jsx)(n.p,{children:"Service\u4e0eUpstream\u7684\u533a\u522b"}),"\n",(0,a.jsx)(n.p,{children:"Service = Upstream + Plugin"}),"\n",(0,a.jsx)(n.p,{children:"\u63d2\u4ef6\u4f18\u5148\u7ea7"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Consumer > Consumer Group > Route > Plugin Config > Service\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u81ea\u5b9a\u4e49nginx\u914d\u7f6e",children:"\u81ea\u5b9a\u4e49nginx\u914d\u7f6e"}),"\n",(0,a.jsxs)(n.p,{children:["\u6709\u4e9b\u573a\u666f\u9700\u8981\u81ea\u5b9a\u4e49nginx \u914d\u7f6e\uff0cnginx.conf\u662f\u901a\u8fc7",(0,a.jsx)(n.a,{href:"https://github.com/apache/apisix/blob/master/apisix/cli/ngx_tpl.lua",children:"apisix/cli/ngx_tpl.lua"}),"\u811a\u672c\u6765\u7ef4\u62a4\uff0c\u4f60\u53ef\u4ee5\u5728 ",(0,a.jsx)(n.code,{children:"conf/nginx.conf"})," \u770b\u5230\u751f\u6210\u7684 Nginx \u914d\u7f6e\u6587\u4ef6"]}),"\n",(0,a.jsx)(n.p,{children:"apisix\u91c7\u7528hook\u7684\u673a\u5236\u6765\u6ce8\u5165\u914d\u7f6e"}),"\n",(0,a.jsx)(n.p,{children:"\u4f8b\u5982main_configuration_snippet\u7684hook\u7684lua\u4ee3\u7801"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:"# main configuration snippet starts\n{% if main_configuration_snippet then %}\n{* main_configuration_snippet *}\n{% end %}\n# main configuration snippet ends\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u5bf9\u5e94apisix_config.yaml\u7684\u914d\u7f6e"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"nginx_config:\n    main_configuration_snippet: |\n        daemon on;\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u63a5\u4e0b\u6765\u62ff\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u6765\u8bf4\u660e"}),"\n",(0,a.jsxs)(n.p,{children:["openid-connect\u63d2\u4ef6\u4f7f\u7528",(0,a.jsx)(n.a,{href:"https://github.com/bungle/lua-resty-session",children:"lua-resty-session"}),"\u6765\u7ba1\u7406session\uff0csession\u9ed8\u8ba4\u5b58\u50a8\u5728\u672c\u673a\u5185\u5b58\u91cc\uff0c\u60f3\u8981\u5c06session\u6570\u636e\u6301\u4e45\u5316\u5230redis\u91cc\uff0c\u95ee\u4e86chatgpt\u7ed9\u51fa\u7684\u7b54\u6848\u90fd\u662f\u8fd9\u4e2a\u79cd\uff0c\u8fd9\u79cd\u65e0\u6cd5\u4f7f\u7528"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'plugin_attr:                     # \u63d2\u4ef6\u5c5e\u6027\u914d\u7f6e\n  session:\n    storage: "redis"             # \u6307\u5b9a\u4f7f\u7528 redis \u5b58\u50a8\n    redis_host: "redis"      # Redis \u670d\u52a1\u5668\u5730\u5740\n    redis_port: 6379             # Redis \u670d\u52a1\u5668\u7aef\u53e3\n    redis_password: "123456"           # Redis \u5bc6\u7801\uff0c\u5982\u679c\u6709\u7684\u8bdd\n    redis_timeout: 1             # Redis \u8d85\u65f6\u65f6\u95f4\uff08\u79d2\uff09\n    redis_database: 1            # Redis \u6570\u636e\u5e93\u7d22\u5f15\n'})}),"\n",(0,a.jsxs)(n.p,{children:["\u770b\u4e86github\u4e0a\u7684\u4e00\u4e2aissuse\u56de\u590d",(0,a.jsx)(n.a,{href:"https://github.com/apache/apisix/issues/6792",children:"https://github.com/apache/apisix/issues/6792"})]}),"\n",(0,a.jsx)(n.p,{children:"\xb7\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539nginx\u914d\u7f6e\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0session\u5b58\u50a8\u7684\u5207\u6362"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"nginx_config:\n  http_server_configuration_snippet: |\n    set $session_storage redis;\n    set $session_secret 0123456789abcdef;\n    set $session_redis_host redis;\n    set $session_redis_password 123456;\n    set $session_redis_port 6379;\n    set $session_redis_ssl off;\n    set $session_redis_ssl_verify off;\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\u770b\u5230\u8fd9\u91cc\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u9650\u5236\uff0c\u5982\u679c\u4e0dngx_tpl.lua\u811a\u672c\u4e0d\u652f\u6301\u6539\u52a8\u7684\u53c2\u6570\uff0c\u5c31\u53ea\u80fd\u901a\u8fc7\u6539",(0,a.jsx)(n.a,{href:"https://github.com/apache/apisix/blob/master/apisix/cli/ngx_tpl.lua",children:"apisix/cli/ngx_tpl.lua"}),"\u811a\u672c\u6765\u5b9e\u73b0\u4e86\u3002"]}),"\n",(0,a.jsx)(n.h2,{id:"\u63d2\u4ef6",children:"\u63d2\u4ef6"}),"\n",(0,a.jsx)(n.h3,{id:"proxy-rewirte",children:"proxy-rewirte"}),"\n",(0,a.jsx)(n.p,{children:"\u5982\u4f55\u5b9e\u73b0\u7c7b\u4f3cnginx\u4ee3\u7406\u7684\u6548\u679c"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"proxy_set_header X-Forwarded-Host $host;\nproxy_set_header X-Forwarded-Server $host;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header X-Forwarded-Proto $scheme; \n"})}),"\n",(0,a.jsx)(n.p,{children:"\u4f7f\u7528proxy-rewirte\u63d2\u4ef6"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n    "uri": "/your_path",\n    "plugins": {\n        "proxy-rewrite": {\n            "headers": {\n                "X-Forwarded-Host": "$host",\n                "X-Forwarded-Server": "$host",\n                "X-Forwarded-For": "$remote_addr",\n                "X-Forwarded-Proto": "$scheme"\n            }\n        }\n    },\n    "upstream": {\n        "type": "roundrobin",\n        "nodes": {\n            "your_upstream_server:port": 1\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"authz-casdoor",children:"authz-casdoor"}),"\n",(0,a.jsx)(n.p,{children:"authz-casdoor\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5b9e\u73b0\u672a\u5305\u542b\u767b\u5f55\u9875\u9762\u7684\u7cfb\u7edf\uff0c\u65b9\u4fbf\u63a7\u5236\u6743\u9650"}),"\n",(0,a.jsx)(n.p,{children:"\u4f7f\u7528\u63d2\u4ef6authz-casdoor\u65f6\uff0cendpoint_addr\u914d\u7f6e\u5982\u679c\u4f7f\u7528https\u7684url\uff0c\u4f1a\u62a5\u4ee5\u4e0b\u9519\u8bef"}),"\n",(0,a.jsx)(n.p,{children:"authz-casdoor.lua:133: phase_func(): 20: unable to get local issuer certificate"}),"\n",(0,a.jsx)(n.p,{children:"root\u7528\u6237\u8fdb\u5165\u5bb9\u5668"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"docker exec -ti --user root example-apisix-1 /bin/bash\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u68c0\u67e5ca-certificates\u7248\u672c"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"root@e7a846cf1084:/usr/local/apisix# apt search ca-certificates\nSorting... Done\nFull Text Search... Done\nca-certificates/oldstable,now 20210119 all [installed]\n  Common CA certificates\n\nca-certificates-java/oldstable-updates 20190909+deb11u1 all\n  Common CA certificates (JKS keystore)\n\nca-certificates-mono/oldstable 6.8.0.105+dfsg-3.3~deb11u1 all\n  Common CA certificates (Mono keystore)\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u5982\u679c\u4f7f\u7528curl\u76f4\u63a5\u8bbf\u95eehttps\u6ca1\u95ee\u9898\uff0cauthz-casdoor.lua\u91cc\u5c31\u62a5\u4e86\u8fd9\u4e2a\u9519"}),"\n",(0,a.jsxs)(n.p,{children:["\u9b54\u6539\u4e86\u4e00\u756a\u4ee3\u7801\uff0c\u901a\u8fc7",(0,a.jsx)(n.code,{children:"client:ssl_handshake(nil, host, false)"}),"\u8df3\u8fc7ssl\u9a8c\u8bc1\uff0c\u6d4b\u8bd5\u901a\u8fc7\u6ca1\u95ee\u9898\u3002"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:'local function fetch_access_token(code, conf)\n    local client = http.new()\n    local url = conf.endpoint_addr .. path\n    local parsed_url = urltools.parse(url)\n    local host = parsed_url.host\n    local port = port or (url:sub(1,5) == "https" and 443 or 80)\n    local ok, err = client:connect(host, port)\n    if not ok then\n        ngx.say("failed to connect: ", err)\n        return\n    end\n\n    client:ssl_handshake(nil, host, false)\n\n    local res, err = client:request({\n        path = path,\n        method = "POST",\n        body = ngx.encode_args({\n            code = code,\n            grant_type = "authorization_code",\n            client_id = conf.client_id,\n            client_secret = conf.client_secret\n        }),\n        headers = {\n            ["Content-Type"] = "application/x-www-form-urlencoded"\n        }\n    })\n\n    local b = res:read_body()\n    local data, err = core.json.decode(b)\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u6539\u4ee3\u7801\u4e0d\u662f\u5f88\u597d\u7684\u65b9\u5f0f\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u901a\u8fc7\u6539\u914d\u7f6e\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0"}),"\n",(0,a.jsx)(n.p,{children:"\u76f4\u63a5\u64cd\u4f5c\u5bb9\u5668\u91ccconf/nginx.conf"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-nginx",children:"http {\n  ...\n  lua_ssl_verify_depth 5;  # \u627e\u5230\u8fd9\u884c\u914d\u7f6e\n\tlua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt; # \u65b0\u589e\u8fd9\u884c\u914d\u7f6e\n  ...\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u91cd\u542f\u5bb9\u5668\uff0c\u66f4\u6539\u6ca1\u751f\u6548\uff0c\u539f\u6765nginx.conf\u662f\u901a\u8fc7apisix/cli/ngx_tpl.lua \u8fd9\u4e2a\u811a\u672c\u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6. \u90e8\u5206\u914d\u7f6e\u662f\u901a\u8fc7config.yaml\u5c31\u53ef\u4ee5\u6539\u7684\uff0c\u4f46lua_ssl_trusted_certificate\u8fd9\u4e2a\u914d\u7f6e\u4e0d\u652f\u6301"}),"\n",(0,a.jsx)(n.p,{children:"\u76f4\u63a5\u6539apisix/cli/ngx_tpl.lua\u811a\u672c"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:"lua_ssl_verify_depth 5;  # \u627e\u5230\u8fd9\u884c\u914d\u7f6e\nlua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt; # \u65b0\u589e\u8fd9\u884c\u914d\u7f6e\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u91cd\u542f\u91cd\u542f\uff0c\u6d4b\u8bd5\u901a\u8fc7\u3002"}),"\n",(0,a.jsxs)(n.p,{children:["\u4ee5\u4e0a\u901a\u8fc7\u6539\u5bb9\u5668\u91cc\u7684\u4ee3\u7801\uff0c\u4e0d\u662f\u5f88\u65b9\u4fbf\uff0c\u5728github\u4e0a\u641c\u5230\u8fd9\u4e2a\u95ee\u9898",(0,a.jsx)(n.a,{href:"https://github.com/apache/apisix/pull/4553/files/b34db9e15b245ab831a5ac1a8aafdd1b58a3cb0e",children:"https://github.com/apache/apisix/pull/4553/files/b34db9e15b245ab831a5ac1a8aafdd1b58a3cb0e"})]}),"\n",(0,a.jsx)(n.p,{children:"\u5728config.yaml\u6587\u4ef6\u52a0\u4e0a\u5982\u4e0b\u914d\u7f6e\u5373\u53ef"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apisix:\n  ssl:\n    ssl_trusted_certificate: /etc/ssl/certs/ca-certificates.crt\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u518d\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u4e3a\u4ec0\u4e48lua-resty-http \u6a21\u5757\u627e\u4e0d\u5230\u7cfb\u7edf\u9ed8\u8ba4\u7684\u6839\u8bc1\u4e66\uff08\u4e0b\u6b21\u518d\u627e\u539f\u56e0\uff09"}),"\n",(0,a.jsx)(n.h3,{id:"ua-restriction",children:"ua-restriction"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ua-restriction"})," \u63d2\u4ef6\u53ef\u4ee5\u901a\u8fc7\u5c06\u6307\u5b9a ",(0,a.jsx)(n.code,{children:"User-Agent"})," \u5217\u5165\u767d\u540d\u5355\u6216\u9ed1\u540d\u5355\u7684\u65b9\u5f0f\u6765\u9650\u5236\u5bf9\u670d\u52a1\u6216\u8def\u7531\u7684\u8bbf\u95ee\u3002"]}),"\n",(0,a.jsx)(n.p,{children:"\u4f8b\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u4ec5\u4ec5\u5141\u8bb8chrome\u6d4f\u89c8\u5668\u8bbf\u95ee"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'"ua-restriction": {\n    "_meta": {\n\t\t\t\t"disable": false\n\t\t},\n    "allowlist": [\n\t\t\t"Chrome"\n\t\t],\n\t\t"bypass_missing": false\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"http-logger",children:"http-logger"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"http-logger"})," Plugin is used to push log data requests to HTTP/HTTPS servers."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'"http-logger": {\n  "_meta": {\n    "disable": false\n  },\n  "include_req_body": true,\n  "include_resp_body": true,\n  "uri": "http://x.x.x.x:8889/log"\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var a=s(6540);const i={},t=a.createContext(i);function r(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);